{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\components\\\\datatable.jsx\",\n  _s = $RefreshSig$();\n// src/components/DataTable.js\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport axios from 'axios'; // Import axios if you're using it\n\n// Replace with your actual API endpoint\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000/api/products';\nfunction DataTable() {\n  _s();\n  const [data, setData] = useState([]); // State for storing fetched data\n  const [loading, setLoading] = useState(true); // State for loading indicator\n  const [error, setError] = useState(null); // State for error handling\n\n  // Retrieve credentials from sessionStorage\n  const username = sessionStorage.getItem('username');\n  const password = sessionStorage.getItem('password');\n\n  // Fetch data from API on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(API_URL, {\n          // Using axios to fetch data\n          headers: {\n            'Authorization': 'Basic ' + btoa(`${username}:${password}`) // Basic Auth header\n          }\n        });\n\n        console.log('API Response:', response.data); // Check the response structure\n        setData(response.data); // Update state with fetched data\n      } catch (error) {\n        setError(error); // Update state with error\n      } finally {\n        setLoading(false); // Set loading to false after data is fetched\n      }\n    };\n\n    fetchData();\n  }, [username, password]);\n\n  // Render loading indicator or error message if needed\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error fetching data: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Array.isArray(data) ? data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","axios","jsxDEV","_jsxDEV","API_URL","DataTable","_s","data","setData","loading","setLoading","error","setError","username","sessionStorage","getItem","password","fetchData","response","get","headers","btoa","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","message","component","Array","isArray","map","row","id","name","detail","colSpan","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/react/src/components/datatable.jsx"],"sourcesContent":["// src/components/DataTable.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\r\nimport axios from 'axios'; // Import axios if you're using it\r\n\r\n// Replace with your actual API endpoint\r\nconst API_URL = 'http://localhost:8000/api/products';\r\n\r\nfunction DataTable() {\r\n  const [data, setData] = useState([]); // State for storing fetched data\r\n  const [loading, setLoading] = useState(true); // State for loading indicator\r\n  const [error, setError] = useState(null); // State for error handling\r\n  \r\n  // Retrieve credentials from sessionStorage\r\n  const username = sessionStorage.getItem('username');\r\n  const password = sessionStorage.getItem('password');\r\n\r\n  // Fetch data from API on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(API_URL, { // Using axios to fetch data\r\n          headers: {\r\n            'Authorization': 'Basic ' + btoa(`${username}:${password}`), // Basic Auth header\r\n          },\r\n        });\r\n        console.log('API Response:', response.data); // Check the response structure\r\n        setData(response.data); // Update state with fetched data\r\n      } catch (error) {\r\n        setError(error); // Update state with error\r\n      } finally {\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [username, password]);\r\n\r\n  // Render loading indicator or error message if needed\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error fetching data: {error.message}</p>;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>ID</TableCell>\r\n            <TableCell>Product Name</TableCell>\r\n            <TableCell>Detail</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {Array.isArray(data) ? (\r\n          data.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.id}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.detail}</TableCell>\r\n            </TableRow>\r\n          ))\r\n        ) : (\r\n          <TableRow>\r\n            <TableCell colSpan={3}>No data available</TableCell>\r\n          </TableRow>\r\n        )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}